name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set version
        run: echo ${{ github.event.release.tag_name }} > CURRENT_VERSION.txt

      - name: build dockerfile
        run: docker build -f .docker/Dockerfile --tag opengisch/signalo:stable .

      - name: create dumps
        run: |
          docker run -d -p 5432:5432 -v $(pwd):/src  --name signalo opengisch/signalo:stable
          docker exec signalo init_db.sh wait
          docker exec signalo pg_dump --format custom --exclude-schema=public --blobs --compress 5 --file db-dump.backup signalo
          docker exec signalo pg_dump --format plain --exclude-schema=public --file db-dump.sql signalo
          docker exec signalo init_db.sh build -d
          docker exec signalo pg_dump --format custom --exclude-schema=public --blobs --compress 5 --file db-dump-with-demo.backup signalo
          docker exec signalo pg_dump --format plain --exclude-schema=public --file db-dump-with-demo.sql signalo

      - name: "create project archive"
        run: |
          sed 's/pg_signalo/pg_signalo_dev/g' project/signalo.qgs > project/signalo_dev.qgs
          sed 's/pg_signalo/pg_signalo_prod/g' project/signalo.qgs > project/signalo_prod.qgs
          cp data_model/demo_data/this-is-the-way.jpg project/this-is-the-way.jpg
          zip -r project.zip project README.md

      - name: "zip changelogs"
        run: |
          zip -r changelogs.zip data_model/changelogs

      - name: SchemaSpy
        run: |
          sudo apt-get install -y openjdk-8-jdk graphviz
          wget https://github.com/schemaspy/schemaspy/releases/download/v6.1.0/schemaspy-6.1.0.jar
          wget https://jdbc.postgresql.org/download/postgresql-42.2.24.jar -O postgresql.jar
          java -jar schemaspy-6.1.0.jar -t pgsql -db signalo -u postgres -host localhost -p postgres \
               -schemas signalo_db,signalo_app -norows \
               -hq -o model-documentation -dp postgresql.jar \
               -desc "signalo data model documentation (version ${{ github.event.release.tag_name }})"
          zip -r model-documentation.zip model-documentation/*

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "push to dockerhub"
        if: github.event_name != 'pull_request'
        run: |
          docker push opengisch/signalo:stable
          docker tag opengisch/signalo:stable opengisch/signalo:${{ github.event.release.tag_name }}
          docker push opengisch/signalo:${{ github.event.release.tag_name }}

      - name: Upload Release Asset - project
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./project.zip
          asset_name: signalo-${{ github.event.release.tag_name }}-project.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - dump
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./db-dump.backup
          asset_name: signalo-${{ github.event.release.tag_name }}-db-dump.backup
          asset_content_type: application/zip

      - name: Upload Release Asset - plain dump
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./db-dump.sql
          asset_name: signalo-${{ github.event.release.tag_name }}-db-dump.sql
          asset_content_type: application/zip

      - name: Upload Release Asset - dump with demo
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./db-dump-with-demo.backup
          asset_name: signalo-${{ github.event.release.tag_name }}-db-dump-with-demo.backup
          asset_content_type: application/zip

      - name: Upload Release Asset - plain dump with demo
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./db-dump-with-demo.sql
          asset_name: signalo-${{ github.event.release.tag_name }}-db-dump-with-demo.sql
          asset_content_type: application/zip

      - name: Upload Release Asset - changelogs
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./changelogs.zip
          asset_name: signalo-${{ github.event.release.tag_name }}-changelogs.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - model-documentation
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./model-documentation.zip
          asset_name: signalo-${{ github.event.release.tag_name }}-model-documentation.zip
          asset_content_type: application/zip

  rebuild-website:
    uses: ./.github/workflows/website.yml
    secrets: inherit
    needs: release
