name: Deploy Demo DB
description: Deploys the demo database from a backup and sets up roles/privileges.
inputs:
  demo_db_host:
    required: true
    description: Database host
  demo_db_user:
    required: true
    description: Database user
  demo_db_port:
    required: true
    description: Database port
  demo_db_name:
    required: true
    description: Database name
  demo_db_password:
    required: true
    description: Database password
  demo_db_backup_file:
    required: true
    description: Path to backup file
  user_role:
    required: false
    default: signalo_user
    description: User role name
  viewer_role:
    required: false
    default: signalo_viewer
    description: Viewer role name
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Deploy Demo DB
      shell: bash
      run: |
        CONNECTION="--host=${{ inputs.demo_db_host }} --username=${{ inputs.demo_db_user }} --port=${{ inputs.demo_db_port }} --dbname=${{ inputs.demo_db_name }}"
        export PGPASSWORD="${{ inputs.demo_db_password }}"
        psql $CONNECTION -c "DROP SCHEMA IF EXISTS signalo_app CASCADE; DROP SCHEMA IF EXISTS signalo_db CASCADE;"
        pg_restore $CONNECTION --exit-on-error --clean --if-exists --no-owner ${{ inputs.demo_db_backup_file }}
        psql $CONNECTION -v EXIT_ON_ERROR=on -v user_role=${{ inputs.user_role }} -v viewer_role=${{ inputs.viewer_role }} -f ./datamodel/roles/create.sql
        psql $CONNECTION -v EXIT_ON_ERROR=on -v user_role=${{ inputs.user_role }} -v viewer_role=${{ inputs.viewer_role }} -f ./datamodel/roles/setup.sql
